"""Initial migration for SQLite

Revision ID: 67a0372d2f7c
Revises: 
Create Date: 2025-07-13 02:17:12.258342

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '67a0372d2f7c'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('dps_tables',
    sa.Column('id', sa.String(length=50), nullable=False),
    sa.Column('quality_common', sa.Float(), nullable=True),
    sa.Column('quality_uncommon', sa.Float(), nullable=True),
    sa.Column('quality_rare', sa.Float(), nullable=True),
    sa.Column('quality_incomparable', sa.Float(), nullable=True),
    sa.Column('quality_legendary', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('items',
    sa.Column('key', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('base_ilvl', sa.Integer(), nullable=False),
    sa.Column('quality', sa.Enum('COMMON', 'UNCOMMON', 'RARE', 'INCOMPARABLE', 'LEGENDARY', name='itemquality'), nullable=False),
    sa.Column('icon', sa.String(length=255), nullable=True),
    sa.Column('item_type', sa.String(length=50), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('key')
    )
    op.create_index(op.f('ix_items_base_ilvl'), 'items', ['base_ilvl'], unique=False)
    op.create_index(op.f('ix_items_name'), 'items', ['name'], unique=False)
    op.create_index(op.f('ix_items_quality'), 'items', ['quality'], unique=False)
    op.create_table('progression_tables',
    sa.Column('table_id', sa.String(length=50), nullable=False),
    sa.Column('progression_type', sa.Enum('LINEAR', 'ARRAY', name='progressiontype'), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('table_id')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=50), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('hashed_password', sa.String(length=255), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.Column('role', sa.Enum('USER', 'BETA_TESTER', 'ADMIN', name='userrole'), nullable=False),
    sa.Column('display_name', sa.String(length=100), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('last_login', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('dps_values',
    sa.Column('dps_table_id', sa.String(length=50), nullable=False),
    sa.Column('level', sa.Integer(), nullable=False),
    sa.Column('value', sa.Float(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['dps_table_id'], ['dps_tables.id'], ),
    sa.PrimaryKeyConstraint('dps_table_id', 'level')
    )
    op.create_table('equipment_items',
    sa.Column('key', sa.Integer(), nullable=False),
    sa.Column('slot', sa.String(length=50), nullable=False),
    sa.Column('armour_type', sa.String(length=20), nullable=True),
    sa.Column('scaling', sa.String(length=255), nullable=True),
    sa.Column('sockets_basic', sa.Integer(), nullable=False),
    sa.Column('sockets_primary', sa.Integer(), nullable=False),
    sa.Column('sockets_vital', sa.Integer(), nullable=False),
    sa.Column('sockets_cloak', sa.Integer(), nullable=False),
    sa.Column('sockets_necklace', sa.Integer(), nullable=False),
    sa.Column('sockets_pvp', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['key'], ['items.key'], ),
    sa.PrimaryKeyConstraint('key')
    )
    op.create_index(op.f('ix_equipment_items_armour_type'), 'equipment_items', ['armour_type'], unique=False)
    op.create_index(op.f('ix_equipment_items_slot'), 'equipment_items', ['slot'], unique=False)
    op.create_table('essences',
    sa.Column('key', sa.Integer(), nullable=False),
    sa.Column('tier', sa.Integer(), nullable=True),
    sa.Column('essence_type', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['key'], ['items.key'], ),
    sa.PrimaryKeyConstraint('key')
    )
    op.create_index(op.f('ix_essences_essence_type'), 'essences', ['essence_type'], unique=False)
    op.create_index(op.f('ix_essences_tier'), 'essences', ['tier'], unique=False)
    op.create_table('item_stats',
    sa.Column('item_key', sa.Integer(), nullable=False),
    sa.Column('stat_name', sa.String(length=50), nullable=False),
    sa.Column('value_table_id', sa.String(length=50), nullable=False),
    sa.Column('order', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['item_key'], ['items.key'], ),
    sa.ForeignKeyConstraint(['value_table_id'], ['progression_tables.table_id'], ),
    sa.PrimaryKeyConstraint('item_key', 'stat_name')
    )
    op.create_table('table_values',
    sa.Column('table_id', sa.String(length=50), nullable=False),
    sa.Column('item_level', sa.Integer(), nullable=False),
    sa.Column('value', sa.Float(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['table_id'], ['progression_tables.table_id'], ),
    sa.PrimaryKeyConstraint('table_id', 'item_level'),
    sa.UniqueConstraint('table_id', 'item_level', name='uq_table_value')
    )
    op.create_table('user_sessions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('token', sa.String(length=255), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('user_agent', sa.String(length=500), nullable=True),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_sessions_token'), 'user_sessions', ['token'], unique=True)
    op.create_table('weapons',
    sa.Column('key', sa.Integer(), nullable=False),
    sa.Column('dps', sa.Float(), nullable=True),
    sa.Column('dps_table_id', sa.String(length=50), nullable=True),
    sa.Column('min_damage', sa.Integer(), nullable=True),
    sa.Column('max_damage', sa.Integer(), nullable=True),
    sa.Column('damage_type', sa.String(length=50), nullable=True),
    sa.Column('weapon_type', sa.String(length=50), nullable=True),
    sa.ForeignKeyConstraint(['dps_table_id'], ['dps_tables.id'], ),
    sa.ForeignKeyConstraint(['key'], ['equipment_items.key'], ),
    sa.PrimaryKeyConstraint('key')
    )
    op.create_index(op.f('ix_weapons_weapon_type'), 'weapons', ['weapon_type'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_weapons_weapon_type'), table_name='weapons')
    op.drop_table('weapons')
    op.drop_index(op.f('ix_user_sessions_token'), table_name='user_sessions')
    op.drop_table('user_sessions')
    op.drop_table('table_values')
    op.drop_table('item_stats')
    op.drop_index(op.f('ix_essences_tier'), table_name='essences')
    op.drop_index(op.f('ix_essences_essence_type'), table_name='essences')
    op.drop_table('essences')
    op.drop_index(op.f('ix_equipment_items_slot'), table_name='equipment_items')
    op.drop_index(op.f('ix_equipment_items_armour_type'), table_name='equipment_items')
    op.drop_table('equipment_items')
    op.drop_table('dps_values')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_table('progression_tables')
    op.drop_index(op.f('ix_items_quality'), table_name='items')
    op.drop_index(op.f('ix_items_name'), table_name='items')
    op.drop_index(op.f('ix_items_base_ilvl'), table_name='items')
    op.drop_table('items')
    op.drop_table('dps_tables')
    # ### end Alembic commands ###
